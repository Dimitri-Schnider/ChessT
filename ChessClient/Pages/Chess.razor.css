/* --- GRUNDSTILE (DESKTOP-FIRST ANSATZ für die betroffenen Elemente) --- */
.global-timers-mobile {
    display: none !important;
}

.timers-desktop-only {
    display: block !important;
    margin-bottom: 15px;
    flex-shrink: 0;
}

.chess-page-container {
    display: flex;
    flex-direction: row;
    gap: 20px;
    box-sizing: border-box;
    overflow: hidden;
    flex-grow: 1;
    min-height: 0;
    align-items: stretch; /* Kinder (.chessboard-column, .game-side-panel) füllen die Höhe */
}

.chessboard-column {
    display: flex;
    align-items: center; /* Zentriert .chessboard-container horizontal in der Spalte */
    justify-content: center; /* Zentriert .chessboard-container vertikal in der Spalte */
    /* Die Spalte selbst soll nicht wachsen, ihre Grösse wird durch .chessboard-container bestimmt */
    flex-grow: 0;
    flex-shrink: 0; /* Soll auch nicht schrumpfen, Grösse kommt vom Inhalt */
    /* Die Höhe wird vom Parent .chess-page-container (align-items: stretch) übernommen */
    /* Die Breite wird durch das Kind .chessboard-container (mit aspect-ratio) bestimmt */
    height: 100%;
    position: relative;
    padding: 10px;
}

.chessboard-container { /* Kind von .chessboard-column, Parent von .chessboard-grid */
    display: flex;
    align-items: center;
    justify-content: center;
    /* WICHTIG: .chessboard-container bestimmt die Grösse des Brettes */
    /* Es nimmt die volle Höhe der .chessboard-column (die gestreckt wurde) */
    /* und berechnet seine Breite basierend auf dem 1:1 Seitenverhältnis. */
    height: 100%;
    width: auto; /* Breite wird durch aspect-ratio aus der Höhe abgeleitet */
    aspect-ratio: 1 / 1;
    /* Optional: Eine absolute Maximalgrösse, falls die Viewport-Höhe zu gross wird */
    /* max-height: 90vh; */ /* Z.B. nicht höher als 90% des Viewports */
    /* max-width: 90vh; */ /* Analog für die Breite */
}
/*
   Erinnerung: .chessboard-grid (in ChessBoard.razor.css) sollte sein:
   width: 100%; height: 100%; aspect-ratio: 1/1; (oder width:100%; height:auto; aspect-ratio:1/1)
   max-width: 100%; max-height: 100%; Damit füllt es den .chessboard-container perfekt aus.
   Der aktuelle Stil: .chessboard-grid { width: 100%; max-width: 100%; aspect-ratio: 1/1; margin: 0; } ist gut.
*/

.game-side-panel {
    display: flex;
    flex-direction: column;
    gap: 10px;
    padding: 10px;
    box-sizing: border-box;
    overflow: hidden;
    flex-grow: 1; /* NIMMT ALLEN VERBLEIBENDEN PLATZ HORIZONTAL */
    min-width: 380px; /* Mindestbreite für die Funktionalität */
    flex-shrink: 1; /* Darf schrumpfen, wenn nötig, bis min-width */
    /* height: 100%; */ /* Ergibt sich aus align-items: stretch des Parents */
}

    .game-side-panel .played-cards-history-display-wrapper {
        overflow-y: auto;
        min-height: 80px;
        flex-grow: 1;
        border: 1px solid #d3d3d3;
        border-radius: 6px;
        padding: 8px;
        background-color: #fdfdfd;
        flex-shrink: 1;
    }

    .game-side-panel .bottom-game-elements {
        display: flex;
        flex-direction: row;
        justify-content: space-between;
        align-items: center;
        gap: 10px;
        flex-shrink: 0;
        min-height: 120px;
    }

.bottom-game-elements > :first-child {
    flex-grow: 1;
    min-width: 0;
    height: 100%;
}

.bottom-game-elements > :last-child {
    flex-shrink: 0;
}

/* STILE FÜR DAS LADE-OVERLAY */
.loading-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    background-color: rgba(0, 0, 0, 0.75);
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    z-index: 9998; /* Unter dem Modal, aber über allem anderen */
    color: white;
}

/* --- Mobile Layout Anpassungen (sollten so bleiben wie im letzten funktionierenden Stand) --- */
@media (max-width: 992px) {
    .global-timers-mobile {
        display: flex !important;
        width: 100%;
        margin-bottom: 5px;
        flex-shrink: 0;
    }

    .timers-desktop-only {
        display: none !important;
    }

    .chessboard-column {
        flex-basis: auto !important;
        width: 100%;
        padding: 0;
        margin: 0;
        flex-grow: 0;
        flex-shrink: 0;
        justify-content: flex-start;
        min-width: unset;
        height: auto;
        aspect-ratio: unset !important; /* Wichtig: Desktop aspect-ratio hier aufheben, falls es auf .chessboard-column wäre */
    }

    .chess-page-container {
        flex-direction: column;
        padding: 0;
        gap: 5px;
        align-items: normal;
    }

    .chessboard-container {
        width: 100%;
        max-width: 100vw;
        height: auto;
        margin: 0;
        padding: 0;
        aspect-ratio: unset !important; /* Wichtig: Desktop aspect-ratio hier aufheben */
    }

    .game-side-panel {
        min-width: unset;
        width: 100%;
        flex-grow: 1;
        min-height: 0;
        padding: 0 5px 5px 5px;
        gap: 5px;
        max-width: none;
        flex-basis: auto;
    }

        .game-side-panel .played-cards-history-display-wrapper {
            min-height: 50px;
            max-height: 100px;
            flex-grow: 0;
            flex-shrink: 1;
            margin-bottom: 5px;
            /* Hinzugefügt: Standard-Display-Typ für den Fall, dass .hidden-on-mobile nicht greift oder entfernt wird */
            display: block; /* oder flex, je nachdem was der Inhalt benötigt */
        }
            /* Diese Regel muss sehr spezifisch sein und Vorrang haben! */
            .game-side-panel .played-cards-history-display-wrapper.hidden-on-mobile {
                display: none !important;
            }


    .bottom-game-elements {
        margin-top: 0;
        padding: 5px;
        min-height: 100px;
    }
}

@media (max-width: 420px) {
    .bottom-game-elements {
        min-height: 90px;
    }

    .game-side-panel .played-cards-history-display-wrapper {
        max-height: 80px;
    }
}

/* Stile für EndGamePopup und CardActivationAnimation können hier bleiben */
.endgame-popup {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background: #fff;
    color: #333;
    padding: 1.5rem 2rem;
    border: 2px solid #444;
    border-radius: 8px;
    font-size: 1.25rem;
    z-index: 1050;
    box-shadow: 0 0 10px rgba(0,0,0,0.5);
    text-align: center;
}

.card-animation-placeholder {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    padding: 20px 40px;
    background-color: rgba(0, 128, 0, 0.8);
    color: white;
    font-size: 1.5em;
    border-radius: 8px;
    z-index: 1100;
    box-shadow: 0 0 15px rgba(0,0,0,0.5);
}
