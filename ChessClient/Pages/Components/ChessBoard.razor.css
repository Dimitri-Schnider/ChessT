/* File: [SolutionDir]/ChessClient/Pages/Components/ChessBoard.razor.css */
.chessboard-grid {
    display: grid;
    grid-template-columns: repeat(8, 1fr);
    grid-template-rows: repeat(8, 1fr);
    width: 100%; /* Füllt die Breite seines Containers (.chessboard-container) */
    /* height: 100%; /* Die Höhe wird durch aspect-ratio bestimmt, nicht explizit 100% des Containers, wenn der Container nicht quadratisch ist */
    aspect-ratio: 1 / 1; /* Stellt sicher, dass das Brett quadratisch ist */
    /* Begrenzt die maximale Grösse des Bretts relativ zum Viewport.
       Passt diese Werte (80vh, 90vw) an, um die gewünschte Maximalgrösse zu erreichen.
       'min(A, B)' nimmt den kleineren der beiden Werte. */
    max-width: min(80vh, 90vw); /* Beispiel: Max. 80% der Viewport-Höhe oder 90% der Viewport-Breite */
    max-height: min(80vh, 90vw); /* Stellt sicher, dass es auch in der Höhe begrenzt ist */
    /* Wenn das Brett immer quadratisch sein soll, reicht theoretisch eine der beiden (z.B. max-height)
                                    in Kombination mit aspect-ratio und width: 100% (bezogen auf den dann quadratischen Container)
                                    Aber beide zu setzen ist sicherer für die Begrenzung. */

    margin: 0; /* Stellt sicher, dass es vom .chessboard-container zentriert wird, falls es kleiner ist */
    background: url('/img/Board.png') no-repeat center center;
    background-size: cover; /* Skaliert das Hintergrundbild, um das Element zu bedecken */
    object-fit: contain; /* Sorgt dafür, dass das Element selbst skaliert wird, falls es Content hat, der überläuft (hier nicht der Fall für das Grid selbst) */
}

.square {
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
    box-sizing: border-box;
}

    .square img {
        max-width: 80%;
        max-height: 80%;
        object-fit: contain;
    }

.highlight {
    outline: 3px solid rgba(255, 215, 0, 0.8);
    outline-offset: -3px; /* Um den Outline innerhalb des Feldes zu zeichnen */
}

/* ----- STYLES FÜR KOORDINATEN-LABELS ----- */
.square .rank-label,
.square .file-label {
    position: absolute;
    font-size: clamp(8px, 1.5vmin, 10px);
    font-weight: bold;
    color: #808080;
    pointer-events: none;
    z-index: 1;
    padding: 1px;
    line-height: 1;
}

.square .rank-label {
    top: 0;
    left: 0;
    margin-top: 2px; /* Kleiner Abstand vom Rand */
    margin-left: 3px; /* Kleiner Abstand vom Rand */
}

.square .file-label {
    bottom: 0;
    right: 0;
    margin-bottom: 1px; /* Kleiner Abstand vom Rand */
    margin-right: 4px; /* Kleiner Abstand vom Rand */
}

/* Optional: Wenn du eine .dark Klasse auf den Feldern hast, um die Textfarbe anzupassen */
.square.dark .rank-label,
.square.dark .file-label {
    color: rgba(255, 255, 255, 0.6); /* Hellere Farbe für dunkle Felder */
}
 