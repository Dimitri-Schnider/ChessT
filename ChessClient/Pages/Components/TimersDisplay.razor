@using ChessLogic
@using ChessClient.State
@using System.Collections.Generic

@code {
    [CascadingParameter] public IGameCoreState? GameCoreState { get; set; }
}

@if (PlayerNames != null)
{
    @* Container für die Timer-Anzeigen *@
    <div class="row mb-3 timers-container">
        @* Timer-Box für Spieler Weiss *@
        <div class="col text-center timer-box @(CurrentTurnPlayer == Player.White && string.IsNullOrEmpty(EndGameMessage) ? "timer-active" : "")">
            <div>Spieler Weiss @(PlayerNames.TryGetValue(Player.White, out var whiteName) ? $"- {whiteName}" : "")</div>
            <div class="time-display">@WhiteTimeDisplay</div>
        </div>
        @* Timer-Box für Spieler Schwarz *@
        <div class="col text-center timer-box @(CurrentTurnPlayer == Player.Black && string.IsNullOrEmpty(EndGameMessage) ? "timer-active" : "")">
            <div>Spieler Schwarz @(PlayerNames.TryGetValue(Player.Black, out var blackName) ? $"- {blackName}" : "")</div>
            <div class="time-display">@BlackTimeDisplay</div>
        </div>
    </div>
}

@code {
    // Angezeigte Zeit für Spieler Weiss
    [Parameter] public string WhiteTimeDisplay { get; set; } = "00:00";
    // Angezeigte Zeit für Spieler Schwarz
    [Parameter] public string BlackTimeDisplay { get; set; } = "00:00";
    // Aktuell am Zug befindlicher Spieler
    [Parameter] public Player? CurrentTurnPlayer { get; set; }
    // Dictionary mit Spielernamen
    [Parameter] public Dictionary<Player, string> PlayerNames { get; set; } = new();
    // Nachricht zum Spielende (deaktiviert Timer-Hervorhebung)
    [Parameter] public string? EndGameMessage { get; set; }
}